from aiogram import Router
from aiogram.filters import CommandStart
from aiogram.types import Message, WebAppInfo, FSInputFile
from aiogram.utils.keyboard import InlineKeyboardBuilder
import aiohttp
from config import config
import os

router = Router()


@router.message(CommandStart())
async def cmd_start(message: Message):
    """Handle /start command - Show welcome message with photo"""
    user = message.from_user

    # Register user via API (silently, no error shown to user)
    async with aiohttp.ClientSession() as session:
        try:
            auth_data = {
                "telegram_id": user.id,
                "first_name": user.first_name,
                "username": user.username,
                "last_name": user.last_name
            }

            async with session.post(
                f"{config.API_URL}/auth/register",
                json=auth_data
            ) as resp:
                if resp.status == 200:
                    data = await resp.json()
                    pred_balance = data.get("pred_balance", 10000)
                else:
                    pred_balance = 10000  # Default value if registration fails
        except:
            pred_balance = 10000  # Default value if API unavailable

    # Welcome message
    welcome_text = f"""<b>üîÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ThePred!</b>

–ü—Ä–∏–≤–µ—Ç, {user.first_name}!

<b>üéØ –ß—Ç–æ —Ç–∞–∫–æ–µ ThePred?</b>
ThePred ‚Äî —ç—Ç–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –±—É–¥—É—â–µ–≥–æ, –≥–¥–µ —Ç—ã –º–æ–∂–µ—à—å –¥–µ–ª–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑—ã –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –∏ –ø–æ–ª—É—á–∞—Ç—å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∑–∞ —Ç–æ—á–Ω–æ—Å—Ç—å.

<b>üí° –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>
‚Ä¢ –í—ã–±–∏—Ä–∞–π –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
‚Ä¢ –î–µ–ª–∞–π –ø—Ä–æ–≥–Ω–æ–∑: –î–ê –∏–ª–∏ –ù–ï–¢
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π PRED —Ç–æ–∫–µ–Ω—ã –∏–ª–∏ TON
‚Ä¢ –ü–æ–ª—É—á–∞–π –Ω–∞–≥—Ä–∞–¥—É, –µ—Å–ª–∏ —É–≥–∞–¥–∞–ª!

<b>üéÅ –¢–≤–æ–π —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–∞–Ω—Å:</b> {pred_balance:,.0f} PRED

<b>üöÄ –ù–∞—á–Ω–∏ —Å–µ–π—á–∞—Å:</b>
‚úì –ò—Å—Å–ª–µ–¥—É–π 20+ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä—ã–Ω–∫–æ–≤
‚úì –í—ã–ø–æ–ª–Ω—è–π –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –º–∏—Å—Å–∏–∏
‚úì –ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π (+100 PRED –∑–∞ –¥—Ä—É–≥–∞)
‚úì –ü–æ–¥–Ω–∏–º–∞–π—Å—è –≤ —Ç–∞–±–ª–∏—Ü–µ –ª–∏–¥–µ—Ä–æ–≤

<i>–ü—Ä–µ–¥—Å–∫–∞–∂–∏ –±—É–¥—É—â–µ–µ ‚Äî —Å—Ç–∞–Ω—å —ç–∫—Å–ø–µ—Ä—Ç–æ–º! üî•</i>

–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ üëá"""

    # Create webapp button
    builder = InlineKeyboardBuilder()
    builder.button(
        text="üöÄ –û—Ç–∫—Ä—ã—Ç—å ThePred",
        web_app=WebAppInfo(url=config.WEBAPP_URL)
    )

    # Send photo with welcome message
    photo_path = os.path.join(os.path.dirname(__file__), "..", "photo_2025-10-30_11-43-57.jpg")

    if os.path.exists(photo_path):
        photo = FSInputFile(photo_path)
        await message.answer_photo(
            photo=photo,
            caption=welcome_text,
            reply_markup=builder.as_markup()
        )
    else:
        # Fallback if photo not found
        await message.answer(
            welcome_text,
            reply_markup=builder.as_markup()
        )
